restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ConfigurationScreen()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun NewNoteScreen(
  stable state: NoteWidgetState
  stable onEvent: Function1<NoteEvent, Unit>
  stable modifier: Modifier? = @static Companion
  stable defaultTextColors: ImmutableList<Color>? = @static persistentListOf(Color.BLACK, Color.WHITE, Color.PINK, Color.SYSTEM)
  stable defaultBackgroundColors: ImmutableList<Color>? = @static persistentListOf(Color.TRANSPARENT, Color.BLACK, Color.WHITE, Color.PINK, Color.SYSTEM)
  stable scrollState: ScrollState? = @dynamic rememberScrollState(0, $composer, 0, 0b0001)
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewNewNoteScreen()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ColorRadioGroup(
  stable title: String
  stable options: ImmutableList<Color>
  stable currentSelection: Color
  stable onSelected: Function1<Color, Unit>
  stable modifier: Modifier? = @static Companion
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ColorRadioGroupPreview()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun RadioButtonRow(
  stable isSelected: Boolean
  stable title: String
  stable onSelected: Function0<Unit>
  stable modifier: Modifier? = @static Companion
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun RadioButtonRowUnSelectedPreview()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun RadioButtonRowSelectedPreview()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun TextSizeSelector(
  stable textSize: String
  stable onIncrement: Function0<Unit>
  stable onDecrement: Function0<Unit>
  stable modifier: Modifier? = @static Companion
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun TextSizeSelectorPreview()
restartable skippable scheme("[0, [0]]") fun BaeNotesTheme(
  stable darkTheme: Boolean = @dynamic isSystemInDarkTheme($composer, 0)
  stable dynamicColor: Boolean = @static true
  stable content: Function2<Composer, Int, Unit>
)
